/*
Problem : dance

베시(암소)와 N ( 1 <= N <= 2,200) 마리의 암소무리들은 ( 편의상 1,2,...,N ) 황소 무리가 있는 댄스 파티에 가려고 한다.
그런데 암소의 수가 황소의 수보다 많아 그 중 어떤 암소들은 집으로 가야 한다.

집으로 보내는 방법은

암소들이 번호 순으로 줄을 선다.
중간지점을 선택하거나 중간 지점을 선택할 수 없는 경우 앞 무리가 뒷 무리보다 한 마리 더 많게 선택해 나간다.
이를 반복하다 마지막 두 마리가 남으면 이 수를 곱하여 총합에 더하고 , 한 마리가 남으면 이 소는 위로의 장미 한 다발을 받고 집으로 가야한다.
그래서 이 댄스는 "홀수 소 탈락" 으로 알려져 있다.
모든 자격이 되는 암소가 선택된 후의 최종적인 합을 구하는 것이 문제이다.

다음은 1 .. 11 마리의 암소가 주어질 때 그들을 나누는 과정이 보여진다.

1   2   3   4   5   6  |  7   8   9   10   11 ... 이 경우 반을 나눌수 없으므로 앞무리 6마리 뒷무리 5마리
1   2   3 | 4   5   6
1   2 | 3
1   2        => 1*2=2  총합 2
3     => 3 번 집으로
4   5 |  6
4  5        => 4*5=20  총합 22
6  => 6 번 집으로
7   8   9  | 10  11
7   8 | 9
7   8        => 7*8=56  총합 78
9    => 9 번 집으로
10  11   => 10*11=110 총합 188
그래서 이 댄스파티의 총 합은 188 이 된다.

입력
정수 N 이 주어진다.

출력
총 합을 출력한다.

입출력 예

입력
11

출력
188

*/

#include <iostream>
using namespace std;


void process(int start, int end, int &total) {
	int diff = end - start;

	if (diff < 2 ) {
		if (diff == 1)
			total += end * start;
		return;
	}
	else {
		process(start, (start + end) / 2, total);
		process((start + end) / 2 + 1, end, total);
	}
}


int main(void) {
	int num_cow;
	int total = 0;
	cin >> num_cow;

	process(1, num_cow, total);
	cout << total << endl;
}